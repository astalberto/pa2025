/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentacion;

import BaseDatos.BDCanton;
import BaseDatos.BDParroquia;
import BaseDatos.BDProvincias;
import Clases.Canton;
import Clases.Parroquia;
import Logica.LogProvincias;
import Clases.Provincia;
import Logica.LogCantones;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import Logica.LogParroquia;
import java.sql.ResultSet;

/**
 *
 * @author alber
 */
public class Inicio extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        cargarComboBoxProvincias();
        jComboBoxProvincias.addActionListener((ActionEvent e) -> {
            cargarComboBoxCantones();
        });
        jComboBoxCantones.addActionListener((ActionEvent e) -> {
            cargarComboBoxParroquias();
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxProvincias = new javax.swing.JComboBox<>();
        jComboBoxCantones = new javax.swing.JComboBox<>();
        jComboBoxParroquias = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jInsertarProvincia = new javax.swing.JButton();
        jInsertarCanton = new javax.swing.JButton();
        jInsertarParroquia = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jActProvincias = new javax.swing.JButton();
        jActCantones = new javax.swing.JButton();
        jActParroquias = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jModProvincias = new javax.swing.JButton();
        jModCantones = new javax.swing.JButton();
        jModParroquias = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBoxProvincias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxProvincias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxProvinciasActionPerformed(evt);
            }
        });

        jComboBoxCantones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxCantones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCantonesActionPerformed(evt);
            }
        });

        jComboBoxParroquias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Provincias");

        jLabel2.setText("Cantones");

        jLabel3.setText("Parroquias");

        jInsertarProvincia.setText("Provincia");
        jInsertarProvincia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInsertarProvinciaActionPerformed(evt);
            }
        });

        jInsertarCanton.setText("Canton");
        jInsertarCanton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInsertarCantonActionPerformed(evt);
            }
        });

        jInsertarParroquia.setText("Parroquia");
        jInsertarParroquia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInsertarParroquiaActionPerformed(evt);
            }
        });

        jLabel4.setText("Insertar");

        jActProvincias.setText("Provincias");
        jActProvincias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActProvinciasActionPerformed(evt);
            }
        });

        jActCantones.setText("Cantones");
        jActCantones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActCantonesActionPerformed(evt);
            }
        });

        jActParroquias.setText("Parroquia");
        jActParroquias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActParroquiasActionPerformed(evt);
            }
        });

        jLabel5.setText("Activar/desactivar");

        jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("Insertar/Modificar");

        jLabel7.setText("C.R.U.D.");

        jModProvincias.setText("Provincias");
        jModProvincias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jModProvinciasActionPerformed(evt);
            }
        });

        jModCantones.setText("Cantones");
        jModCantones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jModCantonesActionPerformed(evt);
            }
        });

        jModParroquias.setText("Parroquia");
        jModParroquias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jModParroquiasActionPerformed(evt);
            }
        });

        jLabel8.setText("Modificar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxProvincias, 0, 104, Short.MAX_VALUE)
                            .addComponent(jComboBoxCantones, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxParroquias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jInsertarParroquia)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jInsertarCanton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jInsertarProvincia, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel4)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jModCantones, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jModParroquias)
                            .addComponent(jModProvincias)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(15, 15, 15)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addComponent(jActProvincias))
                        .addComponent(jActCantones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jActParroquias, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel5)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxProvincias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxCantones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxParroquias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jInsertarProvincia)
                            .addComponent(jModProvincias)
                            .addComponent(jActProvincias))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jInsertarCanton)
                            .addComponent(jModCantones)
                            .addComponent(jActCantones))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jInsertarParroquia)
                            .addComponent(jModParroquias)
                            .addComponent(jActParroquias))))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxProvinciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxProvinciasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxProvinciasActionPerformed

    private void jInsertarProvinciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInsertarProvinciaActionPerformed
        try {
            String nombre = jTextField.getText().trim();
            if (nombre.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese el nombre de la provincia.");
                return;
            }

            Provincia p = new Provincia();
            p.setNombre(nombre);

            BDProvincias objBDProvincias = new BDProvincias();
            int res = objBDProvincias.insertarProvincia(p);
            if (res > 0) {
                JOptionPane.showMessageDialog(this, "Provincia insertada correctamente.");
                cargarComboBoxProvincias(); // Recargar provincias
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al insertar provincia: " + e.getMessage());
        }
    }//GEN-LAST:event_jInsertarProvinciaActionPerformed

    private void jInsertarCantonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInsertarCantonActionPerformed
        // TODO add your handling code here:
        BDCanton objBDCanton = new BDCanton();
        try {
            String nombre = jTextField.getText().trim();
            String nombreProvincia = jComboBoxProvincias.getSelectedItem().toString().split(",")[0].trim();

            BDProvincias dbProvincia = new BDProvincias();
            ResultSet rs = dbProvincia.buscarIdProvincia(nombreProvincia);

            if (rs.next()) {
                int idProvincia = rs.getInt("id_provincia");

                Canton nuevoCanton = new Canton();
                nuevoCanton.setNombre(nombre);
                nuevoCanton.setEstado(true);

                ArrayList<Canton> listaCantones = new ArrayList<>();
                listaCantones.add(nuevoCanton);

                Provincia p = new Provincia();
                p.setCantones(listaCantones); // usa setParroquias porque usas ese nombre para cantones
                p.setId(idProvincia);

                objBDCanton.insertarCanton(p);

                JOptionPane.showMessageDialog(this, "Cantón insertado correctamente.");
                cargarComboBoxCantones();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al insertar cantón: " + ex.getMessage());
        }
    }//GEN-LAST:event_jInsertarCantonActionPerformed

    private void jInsertarParroquiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInsertarParroquiaActionPerformed
        // TODO add your handling code here:
        try {
            String nombre = jTextField.getText().trim();
            String nombreCanton = jComboBoxCantones.getSelectedItem().toString().split(",")[0].trim();

            BDCanton dbCanton = new BDCanton();
            ResultSet rs = dbCanton.buscarIdCanton(nombreCanton); // Asegúrate de tener este método

            if (rs.next()) {
                int idCanton = rs.getInt("id_canton");

                Parroquia parroquia = new Parroquia();
                parroquia.setNombre(nombre);
                parroquia.setEstado(true);

                BDParroquia dbParroquia = new BDParroquia();
                dbParroquia.insertarParroquia(parroquia, idCanton);

                JOptionPane.showMessageDialog(this, "Parroquia insertada correctamente.");
                cargarComboBoxParroquias();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al insertar parroquia: " + ex.getMessage());
        }
    }//GEN-LAST:event_jInsertarParroquiaActionPerformed

    private void jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldActionPerformed

    private void jComboBoxCantonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCantonesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCantonesActionPerformed

    private void jActCantonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActCantonesActionPerformed
        // TODO add your handling code here:
        try {
            String seleccionado = jComboBoxCantones.getSelectedItem().toString();
            String[] partes = seleccionado.split(",");
            String nombre = partes[0].trim();
            boolean estadoActual = Boolean.parseBoolean(partes[1].trim());

            BDCanton db = new BDCanton();
            db.cambiarEstadoCanton(nombre, !estadoActual);

            JOptionPane.showMessageDialog(this, "Estado de cantón actualizado.");
            cargarComboBoxCantones();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cambiar estado de cantón: " + ex.getMessage());
        }

    }//GEN-LAST:event_jActCantonesActionPerformed

    private void jActProvinciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActProvinciasActionPerformed
        // TODO add your handling code here:
        try {
            String seleccionado = jComboBoxProvincias.getSelectedItem().toString();
            String[] partes = seleccionado.split(",");
            String nombre = partes[0].trim();
            boolean estadoActual = Boolean.parseBoolean(partes[1].trim());

            BDProvincias objBDProvincias = new BDProvincias();
            objBDProvincias.cambiarEstadoProvincia(nombre, !estadoActual);

            JOptionPane.showMessageDialog(this, "Estado de provincia actualizado.");
            cargarComboBoxProvincias();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cambiar estado de provincia: " + ex.getMessage());
        }
    }//GEN-LAST:event_jActProvinciasActionPerformed

    private void jActParroquiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActParroquiasActionPerformed
        // TODO add your handling code here:
        try {
            String seleccionado = jComboBoxParroquias.getSelectedItem().toString();
            String[] partes = seleccionado.split(",");
            String nombre = partes[0].trim();
            boolean estadoActual = Boolean.parseBoolean(partes[1].trim());

            BDParroquia db = new BDParroquia();
            db.cambiarEstadoParroquia(nombre, !estadoActual);

            JOptionPane.showMessageDialog(this, "Estado de parroquia actualizado.");
            cargarComboBoxParroquias();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cambiar estado de parroquia: " + ex.getMessage());
        }

    }//GEN-LAST:event_jActParroquiasActionPerformed

    private void jModProvinciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jModProvinciasActionPerformed
        // TODO add your handling code here:
        try {
            String seleccionado = jComboBoxProvincias.getSelectedItem().toString();
            String[] partes = seleccionado.split(",");
            String nombreActual = partes[0].trim();
            String nuevoNombre = jTextField.getText().trim();

            if (nuevoNombre.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese un nuevo nombre.");
                return;
            }

            BDProvincias db = new BDProvincias();
            db.modificarNombreProvincia(nombreActual, nuevoNombre);

            JOptionPane.showMessageDialog(this, "Nombre de provincia actualizado.");
            cargarComboBoxProvincias();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al modificar nombre: " + ex.getMessage());
        }
    }//GEN-LAST:event_jModProvinciasActionPerformed

    private void jModCantonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jModCantonesActionPerformed
        // TODO add your handling code here:
        try {
            String seleccionado = jComboBoxCantones.getSelectedItem().toString();
            String[] partes = seleccionado.split(",");
            String nombreActual = partes[0].trim();
            String nuevoNombre = jTextField.getText().trim();

            if (nuevoNombre.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese un nuevo nombre.");
                return;
            }

            BDCanton db = new BDCanton();
            db.modificarNombreCanton(nombreActual, nuevoNombre);

            JOptionPane.showMessageDialog(this, "Nombre de cantón actualizado.");
            cargarComboBoxCantones();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al modificar nombre: " + ex.getMessage());
        }
    }//GEN-LAST:event_jModCantonesActionPerformed

    private void jModParroquiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jModParroquiasActionPerformed
        // TODO add your handling code here:
        try {
            String seleccionado = jComboBoxParroquias.getSelectedItem().toString();
            String[] partes = seleccionado.split(",");
            String nombreActual = partes[0].trim();
            String nuevoNombre = jTextField.getText().trim();

            if (nuevoNombre.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese un nuevo nombre.");
                return;
            }

            BDParroquia db = new BDParroquia();
            db.modificarNombreParroquia(nombreActual, nuevoNombre);

            JOptionPane.showMessageDialog(this, "Nombre de parroquia actualizado.");
            cargarComboBoxParroquias();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al modificar nombre: " + ex.getMessage());
        }
    }//GEN-LAST:event_jModParroquiasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    private void cargarComboBoxProvincias() {
        try {
            LogProvincias log = new LogProvincias();
            ArrayList<Provincia> provincias = log.obtenerListaProvincias();

            jComboBoxProvincias.removeAllItems();
            for (Provincia p : provincias) {
                jComboBoxProvincias.addItem(p.getNombre() + "," + p.isEstado());
            }

            jComboBoxProvincias.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar provincias: " + ex.getMessage());
        }
    }

    private void cargarComboBoxCantones() {
        String nombreProvincia = (String) jComboBoxProvincias.getSelectedItem();
        if (nombreProvincia == null) {
            return;
        }

        // En caso de que venga con coma o tab
        nombreProvincia = nombreProvincia.split(",")[0].trim();

        try {
            LogCantones log = new LogCantones();
            ArrayList<Canton> cantones = log.obtenerCantonesDesdeTexto(nombreProvincia);

            jComboBoxCantones.removeAllItems();
            for (Canton c : cantones) {
                jComboBoxCantones.addItem(c.getNombre() + "," + c.isEstado());
            }

            jComboBoxCantones.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar cantones: " + ex.getMessage());
        }
    }

    private void cargarComboBoxParroquias() {
        try {
            String nombreCanton = (String) jComboBoxCantones.getSelectedItem();
            if (nombreCanton == null) {
                return;
            }

            nombreCanton = nombreCanton.split(",")[0].trim(); // Tomar solo el nombre

            LogParroquia objLogParroquia = new LogParroquia();
            ArrayList<Parroquia> parroquias = objLogParroquia.obtenerParroquiasDesdeTexto(nombreCanton);

            jComboBoxParroquias.removeAllItems();
            for (Parroquia p : parroquias) {
                jComboBoxParroquias.addItem(p.getNombre() + "," + p.isEstado());
            }

            jComboBoxParroquias.setEnabled(true);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar parroquias: " + ex.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jActCantones;
    private javax.swing.JButton jActParroquias;
    private javax.swing.JButton jActProvincias;
    private javax.swing.JComboBox<String> jComboBoxCantones;
    private javax.swing.JComboBox<String> jComboBoxParroquias;
    private javax.swing.JComboBox<String> jComboBoxProvincias;
    private javax.swing.JButton jInsertarCanton;
    private javax.swing.JButton jInsertarParroquia;
    private javax.swing.JButton jInsertarProvincia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton jModCantones;
    private javax.swing.JButton jModParroquias;
    private javax.swing.JButton jModProvincias;
    private javax.swing.JTextField jTextField;
    // End of variables declaration//GEN-END:variables
}
